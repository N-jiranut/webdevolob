import cv2

def find_working_camera():
    """
    Finds and returns the index of a working camera.
    Returns -1 if no working camera is found.
    """
    # Start checking from index 0
    i = 0
    while i < 10:  # Check up to 10 potential camera indices
        # Try to open the camera with the current index
        cap = cv2.VideoCapture(i)

        # Check if the camera was successfully opened
        if cap.isOpened():
            print(f"Success: Found working camera at index {i}.")
            # Check if we can read a frame
            ret, frame = cap.read()
            if ret:
                print("Success: Can read a frame from the camera.")
                cap.release()
                return i
            else:
                print("Warning: Camera opened but failed to read a frame. Trying next index.")
                cap.release()
                i += 1
        else:
            print(f"Error: No camera found at index {i}. Trying next index.")
            i += 1
    
    # If the loop completes without finding a working camera
    print("No working camera found.")
    return -1

# Main part of the script
if __name__ == "__main__":
    camera_index = find_working_camera()

    if camera_index != -1:
        # Now, you can use the found camera index in your main application
        print(f"Using camera at index {camera_index} for further processing.")
        
        # Example of how to use the found camera
        cap = cv2.VideoCapture(camera_index)
        if cap.isOpened():
            while True:
                ret, frame = cap.read()
                if not ret:
                    print("Exiting...")
                    break
                cv2.imshow("Working Camera", frame)
                if cv2.waitKey(1) & 0xFF == ord('q'):
                    break
            cap.release()
            cv2.destroyAllWindows()
    else:
        print("Could not find a working camera. Please check your setup.")